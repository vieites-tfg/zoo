apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Chart.Name }}-{{ .Release.Namespace }}-statefulset
  labels:
    app.kubernetes.io/name: zoo-mongo
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  serviceName: {{ .Chart.Name }}-{{ .Release.Namespace }}-svc
  replicas: {{ .Values.global.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: zoo-mongo
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: zoo-mongo
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      volumes:
        - name: {{ .Chart.Name }}-{{ .Release.Namespace }}-mongo-init
          configMap:
            name: {{ .Chart.Name }}-{{ .Release.Namespace }}-mongo-init
      containers:
        - name: mongo
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          tty: true
          stdin: true
          ports:
            - containerPort: {{ .Values.service.port }}
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Chart.Name }}-{{ .Release.Namespace }}-secret
                  key: MONGO_INITDB_ROOT_USERNAME
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Chart.Name }}-{{ .Release.Namespace }}-secret
                  key: MONGO_INITDB_ROOT_PASSWORD
            - name: MONGO_INITDB_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: {{ .Chart.Name }}-{{ .Release.Namespace }}-config
                  key: MONGO_INITDB_DATABASE
          volumeMounts:
            - name: data
              mountPath: /data/db
            - name: {{ .Chart.Name }}-{{ .Release.Namespace }}-mongo-init
              mountPath: /docker-entrypoint-initdb.d
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app.kubernetes.io/name: zoo-mongo
          app.kubernetes.io/instance: {{ .Release.Name }}
      spec:
        accessModes: {{ toYaml .Values.persistence.accessModes | nindent 8 }}
        storageClassName: {{ .Values.persistence.storageClass }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
