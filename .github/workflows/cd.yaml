name: Dagger CD

on:
  push:
    branches: [ main ]
  release:
    types: [ published ]
  workflow_dispatch:

jobs:
  cd:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Determine environment
        id: determine_env
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            envi="dev"
            echo "push"
          elif [[ "${{ github.event_name }}" == "release" ]]; then
            if [[ "${{ github.event.release.prerelease }}" == "true" ]]; then
              envi="pre"
              echo "pre-release"
            else
              envi="pro"
              echo "release"
            fi
          else
            # Workflow dispatch
            envi="dev"
            echo "dispatch"
          fi

          echo "Determined environment: $envi"
          echo "environment=$envi" >> "$GITHUB_OUTPUT"

          exit 0

      - name: Recreate needed files
        run: |
          # Create .env
          echo "MONGO_DATABASE=${{ secrets.MONGO_DATABASE }}" > ./.env
          echo "MONGO_ROOT=${{ secrets.MONGO_ROOT }}" >> ./.env
          echo "MONGO_ROOT_PASS=${{ secrets.MONGO_ROOT_PASS }}" >> ./.env
          echo "CR_PAT=${{ secrets.CR_PAT }}" >> ./.env
          echo "STATE_REPO=${{ secrets.STATE_REPO }}" >> ./.env

          # Create SOPS files
          mkdir -p sops
          echo "${{ secrets.SOPS_PRIVATE_KEY }}" > ./sops/age.agekey
          cat <<EOF > ./sops/.sops.yaml
          ${{ secrets.SOPS_CONFIG_FILE }}
          EOF

      - name: Run Dagger CD module
        uses: dagger/dagger-for-github@8.0.0
        with:
          module: ./dagger/cd
          call: >-
            --socket=/var/run/docker.sock
            --kind-svc=tcp://localhost:3000
            --config-file=file://cluster/kind_local.yaml
            launch
            --sec-env=file://.env
            --env=${{ steps.determine_env.outputs.environment }}
            --age-key=file://sops/age.agekey
            --sops-config=file://sops/.sops.yaml
